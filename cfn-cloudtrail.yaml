AWSTemplateFormatVersion: 2010-09-09
  
Description: Enable CloudTrail globally for the account
  
Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
            - Label:
                  default: Features
              Parameters:
                  - EnableSNS
                  - EnableCloudWatchLogs
            - Label:
                  default: Persistence Requirements
              Parameters:
                  - DaysToKeepLogsInS3
                  - DaysToKeepLogsInCloudWatch
        ParameterLabels:
            DaysToKeepLogsInS3:
                default: 'Days to keep logs in S3'
            EnableSNS:
                default: 'Enable SNS Notifidations'
            EnableCloudWatchLogs:
                default: 'Enable CloudWatch Logging'
            DaysToKeepLogsInCloudWatch:
                default: 'Days to keep logs in CloudWatch'

Parameters:
    DaysToKeepLogsInS3:
        Description: How long in total to keep CloudTrail logs? Minimum 120 days. Default 1 year.
        Type: Number
        MinValue: 120
        Default: 365

    EnableSNS:
        Description: Create an SNS topic and publish to it when new log files are saved
        Type: String
        Default: No
        AllowedValues:
            - Yes
            - No

    EnableCloudWatchLogs:
        Description: Enable CloudTrail to publish to a CloudWatchLogs Group
        Type: String
        Default: Yes
        AllowedValues:
            - Yes
            - No

    DaysToKeepLogsInCloudWatch:
        Description: How long to keep CloudTrail logs available in CloudWatch. Default 7 days
        Type: Number
        Default: 7
        # These values come from the docs
        AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]            

Conditions:
    UseSNSTopic: 
        !Equals [ !Ref EnableSNS, Yes ]
    UseCloudWatchLogs: 
        !Equals [ !Ref EnableCloudWatchLogs, Yes ]

Resources: 
  
    LogStorage: 
        Type: AWS::S3::Bucket
        Properties: 

            # Encrypt everything. Technically CloudTrail will use SSE-AES256 when writting logs, but here we set the BucketEncryption flag anyway
            BucketEncryption:
                ServerSideEncryptionConfiguration:
                    - ServerSideEncryptionByDefault:
                          SSEAlgorithm: AES256

            # Let's not keep everything forever. Trying to stay light on costs!
            LifecycleConfiguration:
                Rules:                      
                - Id: CloudTrailTransitions
                  Status: Enabled
                  Transitions:
                      - # Change storage class to IA quickly (30 days is the minimum)
                          TransitionInDays: 30
                          StorageClass: STANDARD_IA
                      - # Change storage class to Glacier after a reasonable period
                          TransitionInDays: 90
                          StorageClass: GLACIER                                                 
                  ExpirationInDays: !Ref DaysToKeepLogsInS3
                  # This should not be necessary, but just in case...
                  AbortIncompleteMultipartUpload:
                      DaysAfterInitiation: 2
            
            # These files should never be public!
            PublicAccessBlockConfiguration:
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true
          
              
    # Allow the CloudTrail service access to the bucket, and deny deletes from log bucket for all except the root account
    BucketPolicy: 
        Type: AWS::S3::BucketPolicy
        Properties: 
            Bucket: 
                Ref: LogStorage
            PolicyDocument: 
                Version: 2012-10-17
                Statement: 
                    - Sid: AWSCloudTrailAclCheck
                      Effect: Allow
                      Principal: 
                          Service: cloudtrail.amazonaws.com
                      Action: s3:GetBucketAcl
                      Resource: !Sub arn:aws:s3:::${LogStorage}
                    - Sid: AWSCloudTrailWrite
                      Effect: Allow
                      Principal: 
                          Service: cloudtrail.amazonaws.com
                      Action: s3:PutObject
                      Resource: !Sub arn:aws:s3:::${LogStorage}/AWSLogs/${AWS::AccountId}/*
                      Condition: 
                          StringEquals:
                              s3:x-amz-acl: bucket-owner-full-control
                    - Sid: DenyDeleteAccessToAllButRoot
                      Effect: Deny
                      NotPrincipal:
                          AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
                      Action: s3:DeleteObject
                      Resource: !Sub arn:aws:s3:::${LogStorage}/AWSLogs/${AWS::AccountId}/*

    Topic: 
        Type: AWS::SNS::Topic
        Condition: UseSNSTopic

    # Allow CloudTrail to publish to the topic
    TopicPolicy: 
        Type: AWS::SNS::TopicPolicy
        Condition: UseSNSTopic
        Properties: 
            Topics: 
                - Ref: Topic
            PolicyDocument: 
                Version: 2008-10-17
                Statement: 
                    - Sid: AWSCloudTrailSNSPolicy
                      Effect: Allow
                      Principal: 
                          Service: cloudtrail.amazonaws.com
                      Resource: "*"
                      Action: SNS:Publish
              
    CloudTrailLogGroup:
        Condition: UseCloudWatchLogs
        Type: AWS::Logs::LogGroup
        Properties:
            RetentionInDays: !Ref DaysToKeepLogsInCloudWatch

    # Allow the CloudTrail service to log to CloudWatch
    CloudTrailLogsRole:
        Condition: UseCloudWatchLogs
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument: 
                Version: "2012-10-17"
                Statement: 
                    - Effect: "Allow"
                      Principal: 
                          Service: 
                              - cloudtrail.amazonaws.com
                      Action: sts:AssumeRole
            Path: "/"
            Policies: 
                - 
                    PolicyName: CloudTrailLogging
                    PolicyDocument: 
                        Version: 2012-10-17
                        Statement: 
                            - Sid: AllowCloudTrailCreateLogStream                
                              Effect: Allow
                              Action: 
                                  - logs:CreateLogStream
                                  - logs:PutLogEvents
                              Resource: !GetAtt CloudTrailLogGroup.Arn

    # Finally, create the Trail
    AllRegions: 
        Type: AWS::CloudTrail::Trail
        DependsOn: 
            - BucketPolicy        
        Properties: 
            S3BucketName: 
                Ref: LogStorage
            SnsTopicName:
                !If [UseSNSTopic, !GetAtt Topic.TopicName, !Ref "AWS::NoValue"]
            CloudWatchLogsRoleArn:
                !If [UseCloudWatchLogs, !GetAtt CloudTrailLogsRole.Arn, !Ref "AWS::NoValue"]
            CloudWatchLogsLogGroupArn: 
                !If [UseCloudWatchLogs, !GetAtt CloudTrailLogGroup.Arn, !Ref "AWS::NoValue"]
            IsLogging: true
            EnableLogFileValidation: true
            IncludeGlobalServiceEvents: true
            IsMultiRegionTrail: true